<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<title>Demo - CSV-to-Table</title>

<style>
#drop {
	border: 2px dashed #bbb;
	-moz-border-radius: 5px;
	-webkit-border-radius: 5px;
	border-radius: 5px;
	padding: 25px;
	text-align: center;
	font: 20pt bold, "Vollkorn";
	color: #bbb
}

#b64data {
	width: 100%;
}
</style>

<script src="/js/jquery-1.10.2.min.js"></script>
<script src="/js/exshipper/jquery.csv-0.71.js"></script>
<script>
	$(document).ready(function() {
		if (isAPIAvailable()) {
			$('#files').bind('change', handleFileSelect);
		}
	});

	function isAPIAvailable() {
		// Check for the various File API support.
		if (window.File && window.FileReader && window.FileList && window.Blob) {
			// Great success! All the File APIs are supported.
			return true;
		} else {
			// source: File API availability - http://caniuse.com/#feat=fileapi
			// source: <output> availability - http://html5doctor.com/the-output-element/
			document
					.writeln('The HTML5 APIs used in this form are only available in the following browsers:<br />');
			// 6.0 File API & 13.0 <output>
			document.writeln(' - Google Chrome: 13.0 or later<br />');
			// 3.6 File API & 6.0 <output>
			document.writeln(' - Mozilla Firefox: 6.0 or later<br />');
			// 10.0 File API & 10.0 <output>
			document
					.writeln(' - Internet Explorer: Not supported (partial support expected in 10.0)<br />');
			// ? File API & 5.1 <output>
			document.writeln(' - Safari: Not supported<br />');
			// ? File API & 9.2 <output>
			document.writeln(' - Opera: Not supported');
			return false;
		}
	}

	function handleFileSelect(evt) {
		var files = evt.target.files; // FileList object
		var file = files[0];

		// read the file metadata
		var output = ''
		output += '<span style="font-weight:bold;">' + escape(file.name)
				+ '</span><br />\n';
		output += ' - FileType: ' + (file.type || 'n/a') + '<br />\n';
		output += ' - FileSize: ' + file.size + ' bytes<br />\n';
		output += ' - LastModified: '
				+ (file.lastModifiedDate ? file.lastModifiedDate
						.toLocaleDateString() : 'n/a') + '<br />\n';

		// read the file contents
		printTable(file);

		// post the results
		$('#list').append(output);
	}

	function printTable(file) {
		var reader = new FileReader();
		reader.readAsText(file);
		reader.onload = function(event) {
			var csv = event.target.result;
			alert(csv);

			var data = $.csv.toArrays(csv);
			var html = '';
			for ( var row in data) {
				html += '<tr>\r\n';
				for ( var item in data[row]) {
					html += '<td>' + data[row][item] + '</td>\r\n';
				}
				html += '</tr>\r\n';
			}
			$('#contents').html(html);
		};
		reader.onerror = function() {
			alert('Unable to read ' + file.fileName);
		};
	}
</script>


<script type="text/javascript">
	function download_as_csv() {

		var data = [ [ "name1", "city1", "地區" ],
				[ "name2", "city2", "more info" ] ];
		var csvContent = "data:text/csv;charset=utf-8,";
		data.forEach(function(infoArray, index) {

			dataString = infoArray.join(",");
			csvContent += index < infoArray.length ? dataString + "\n"
					: dataString;

		});
		var encodedUri = encodeURI(csvContent);
		var link = document.createElement("a");
		link.setAttribute("href", encodedUri);
		link.setAttribute("download", "my_data.csv");

		link.click();
	}
</script>

<script src="/js/exshipper/jszip.js"></script>
<script src="/js/exshipper/xlsx.js"></script>
<script src="/js/exshipper/shim.js"></script>
</head>

<body>
	<div id=inputs class=clearfix>
		<input type=file id=files name=files[] multiple />
	</div>
	<hr />
	<output id=list> </output>
	<hr />
	<table id=contents
		style="width: 100%; height: 400px; border: 1px solid;">
	</table>

	<input type="button" value="DownLoad" onclick="download_as_csv()">

	<br>
	<hr>
<b>JS-XLSX (XLSX/XLSB/XLSM) Live Demo</b><br />
<input type="radio" name="format" value="csv" checked> CSV<br>
<input type="radio" name="format" value="json"> JSON<br>
<input type="radio" name="format" value="form"> FORMULAE<br>

<br>
<div id="drop">Drop an XLSX or XLSM or XLSB file here to see sheet data.</div>
</body>