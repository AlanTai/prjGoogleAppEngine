{% extends "/exshipper/exshipper_base.html"%} {% block main_content %}
<div
	style="text-align: center; margin: 0px auto; position: fixed; width: 100%; background-color: #fff; z-index: 100;">
	<p style="font-size: 26px;">ExShipper Invoice Page</p>
	<hr>
</div>


<div
	style="position: absolute; top: 100px; width: 100%; margin: 10px auto;">
	<p>Invoice Log Page</p>
	<form action="/exshipper_invoice_log_handler" method="post"
		style="margin: 5px auto; text-align: center;">
		<p style="display: block;">Please type in the account and password</p>
		<div>
			<label style="width: 150px; display: inline-block;">Account
				Name</label> <input name="invoice_account" type="text"
				style="width: 250px; display: inline-block; padding: 2px 5px;" />
		</div>
		<br>
		<div>
			<label style="width: 150px; display: inline-block;">Password</label>
			<input name="invoice_password" type="password"
				style="width: 250px; display: inline-block; padding: 2px 5px;" />
		</div>
		<br> <input type="submit" value="Submit" />
	</form>
</div>

<script>
(function() {
  
  hookEvent(window, "load", function() {
    hookEvent(document.getElementById("theButton"), "click", function() {
      window.location.replace("/exshipper_invoice_log_handler");
    });
  });
}


function hookEvent(element, eventName, handler) {
  // Very quick-and-dirty, recommend using a proper library,
  // this is just for the purposes of the example.
  if (typeof element.addEventListener !== "undefined") {
    element.addEventListener(eventName, handler, false);
  }
  else if (typeof element.attachEvent !== "undefined") {
    element.attachEvent("on" + eventName, handler);
  }
  else {
    element["on" + eventName] = handler;
  }
}

)();
</script>

{% endblock %}
