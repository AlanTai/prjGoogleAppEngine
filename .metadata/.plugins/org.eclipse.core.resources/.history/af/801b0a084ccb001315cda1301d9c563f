{% extends "/exshipper/exshipper_base.html"%} {% block main_content %}

<script type="text/javascript">
	window.onload = function() {
		history.pushState(null, null, location.href);
		window.onpopstate = function(event) {
			history.go(1);
		};
	}
</script>

<div
	style="text-align: center; margin: 0px auto; position: fixed; width: 100%; background-color: #fff; z-index: 100;">
	<p style="font-size: 26px;">ExShipper Cargo Manifest</p>
	
	<hr>
</div>

<div
	style="position: absolute; top: 100px; width: 100%; text-align: center; margin: 10px auto;">
	<div>
		<br /> <a id="xls_download">Download Cargo Manifest in XLS Format</a>
	</div>
	<br>
	<script type="text/javascript">
		var packages_status = new Object();
		var json_array = new Array();

		//put keys into array
		var obj_keys = new Object();
		obj_keys['shipping_date'] = '出貨日';
		obj_keys['hawb'] = '黑貓託運單號';

		obj_keys['replaced_tracking_number'] = '換單單號';
		obj_keys['hawb'] = '訂單編號';
		obj_keys['tw_custom_entry_package_tracking_number'] = '袋號';
		obj_keys['customer_number'] = '客戶代號';
		obj_keys['consignee_name_chinese'] = '收件人';
		obj_keys['consignee_tel_1'] = '收件人電話 1';
		obj_keys['consignee_tel_2'] = '收件人電話 2';

		obj_keys['consignee_address_chinese'] = '收件人地址';
		obj_keys['commodity_detail'] = '品名';

		obj_keys['ctn'] = '數量';
		obj_keys['weight_kg'] = '重量';
		obj_keys['declaration_need_or_not'] = 'weight_kg';
		obj_keys['duty_paid_by'] = 'duty_paid_by';

		json_array.push(obj_keys);
	</script>

	<!-- spearnet cargo manifest -->
	{% if cargo_manifest_spearnet %} <br>
		{% for single_row_data in cargo_manifest_spearnet %}
		
		<!--  -->
		<script type="text/javascript">

			$(function() {
				//setup initial select values
				$('#{{ single_row_data.hawb }}').val(
						'{{ single_row_data.package_status }}');
				//update json obj when select value change
				$('#{{ single_row_data.hawb }}').change(function() {
					var key = $(this).attr('id');
					packages_status[key] = $(this).val();
				});
			});
			
			var obj = new Object();
			obj['tw_custom_entry_number'] = '{{ single_row_data.tw_custom_entry_number }}';
			obj['hawb'] = '{{ single_row_data.hawb }}';

			obj['ctn'] = '{{ single_row_data.ctn }}';
			obj['weight_kg'] = '{{ single_row_data.weight_kg }}';
			obj['weight_lb'] = '{{ single_row_data.weight_lb }}';

			//parse json object
			var commodity_json = JSON
					.parse('{{ single_row_data.commodity_detail }}');
			var commodity_string = new String();
			for ( var ith in commodity_json['items']) {
				var data = commodity_json['items'][ith];
				commodity_string += " Item Name: " + data.name + " Quantity: "
						+ data.quan + " Price: " + data.price + " ; ";
			};

			obj['commodity_detail'] = commodity_string;
			obj['pcs'] = "{{ single_row_data.pcs }}";
			obj['unit'] = "{{ single_row_data.unit }}";

			obj['original'] = "{{ single_row_data.original }}";
			obj['unit_price_fob_us_dollar'] = "{{ single_row_data.unit_price_fob_us_dollar }}";
			obj['deliver_to'] = "{{ single_row_data.deliver_to }}";

			obj['shipper_company'] = "{{ single_row_data.shipper_company }}";
			obj['shipper_person'] = "{{ single_row_data.shipper_person }}";

			obj['consignee_name_english'] = "{{ single_row_data.consignee_name_english }}";
			obj['consignee_name_chinese'] = "{{ single_row_data.consignee_name_chinese }}";
			obj['consignee_tel'] = "{{ single_row_data.consignee_tel }}";
			obj['consignee_address_english'] = "{{ single_row_data.consignee_address_english }}";
			

			obj['company_id_or_person_id'] = "{{ single_row_data.company_id_or_personal_id }}";
			obj['size_accumulation'] = "{{ single_row_data.size_accumulation }}";
			obj['declaration_need_or_not'] = "{{ single_row_data.declaration_need_or_not }}";
			obj['duty_paid_by'] = "{{ single_row_data.duty_paid_by }}";

			json_array.push(obj);
		</script>
		{% endfor %}
		{% endif %}
		<!-- end spearnet cargo manifest -->

		<!-- general clients cargo manifest -->
		{% if cargo_manifest_general_clients %} <br>
			{% for single_row_data in cargo_manifest_general_clients %}
			
			<!--  -->
			<script type="text/javascript">
				
				$(function() {
					//setup initial select values
					$('#{{ single_row_data.hawb }}').val(
							'{{ single_row_data.package_status }}');
					//update json obj when select value change
					$('#{{ single_row_data.hawb }}').change(function() {
						var key = $(this).attr('id');
						/* if (typeof packages_status[key] === 'undefined'){
							packages_status[key] = $(this).val();
						} */
						packages_status[key] = $(this).val();
					});
				});

				var obj = new Object();
				obj['tw_custom_entry_number'] = '{{ single_row_data.tw_custom_entry_number }}';
				obj['hawb'] = '{{ single_row_data.hawb }}';

				obj['ctn'] = '{{ single_row_data.ctn }}';
				obj['weight_kg'] = '{{ single_row_data.weight_kg }}';
				obj['weight_lb'] = '{{ single_row_data.weight_lb }}';

				//parse json object
				var commodity_json = JSON
						.parse('{{ single_row_data.commodity_detail }}');
				var commodity_string = new String();
				for ( var ith in commodity_json['items']) {
					var data = commodity_json['items'][ith];
					commodity_string += " Item Name: " + data.name
							+ " Quantity: " + data.quan + " Price: "
							+ data.price + " ; ";
				};

				obj['commodity_detail'] = commodity_string;
				obj['pcs'] = "{{ single_row_data.pcs }}";
				obj['unit'] = "{{ single_row_data.unit }}";

				obj['original'] = "{{ single_row_data.original }}";
				obj['unit_price_fob_us_dollar'] = "{{ single_row_data.unit_price_fob_us_dollar }}";
				obj['deliver_to'] = "{{ single_row_data.deliver_to }}";

				obj['shipper_company'] = "{{ single_row_data.shipper_company }}";
				obj['shipper_person'] = "{{ single_row_data.shipper_person }}";

				obj['consignee_name_english'] = "{{ single_row_data.consignee_name_english }}";
				obj['consignee_name_chinese'] = "{{ single_row_data.consignee_name_chinese }}";
				obj['consignee_tel'] = "{{ single_row_data.consignee_tel }}";
				obj['consignee_address_english'] = "{{ single_row_data.consignee_address_english }}";
				

				obj['company_id_or_person_id'] = "{{ single_row_data.company_id_or_personal_id }}";
				obj['size_accumulation'] = "{{ single_row_data.size_accumulation }}";
				obj['declaration_need_or_not'] = "{{ single_row_data.declaration_need_or_not }}";
				obj['duty_paid_by'] = "{{ single_row_data.duty_paid_by }}";

				json_array.push(obj);
			</script>
			{% endfor %}
			{% endif %}
			<!-- end -->

		<script type="text/javascript">
			//Test script to generate a file from JavaScript such
			//that MS Excel will honor non-ASCII characters.
			//var packages_info_log = "{{ spearnet_customer_package_info_log }}";

			var obj_types = new Object();
			obj_types.tw_custom_entry_number = "String";
			obj_types.hawb = "String";

			obj_types.ctn = "String";
			obj_types.weight_kg = "String";
			obj_types.weight_lb = "String";
			
			obj_types.commodity_detail = "String";
			obj_types.pcs = "String";
			obj_types.unit = "String";

			obj_types.original = "String";
			obj_types.unit_price_fob_us_dollar = "String";
			obj_types.deliver_to = "String";


			obj_types.shipper_company = "String";
			obj_types.shipper_person = "String";

			obj_types.consignee_name_english = "String";
			obj_types.consignee_name_chinese = "String";
			obj_types.consignee_tel = "String";
			obj_types.consignee_address_english = "String";

			obj_types.company_id_or_person_id = "String";
			obj_types.size_accumulation = "String";
			obj_types.declaration_need_or_not = "String";
			obj_types.duty_paid_by = "String";

			testJson = json_array;
			testTypes = obj_types;

			emitXmlHeader = function() {
				return '<?xml version="1.0"?>\n'
						+ '<ss:Workbook xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">\n'
						+ '<ss:Worksheet ss:Name="Sheet1">\n'
						+ '<ss:Table>\n\n';
			};

			emitXmlFooter = function() {
				return '\n</ss:Table>\n' + '</ss:Worksheet>\n'
						+ '</ss:Workbook>\n';
			};

			jsonToSsXml = function(jsonObject) {
				var row;
				var col;
				var xml;
				var data = typeof jsonObject != "object" ? JSON
						.parse(jsonObject) : jsonObject;

				xml = emitXmlHeader();

				for (row = 0; row < data.length; row++) {
					xml += '<ss:Row>\n';

					for (col in data[row]) {
						xml += '  <ss:Cell>\n';
						xml += '    <ss:Data ss:Type="' + testTypes[col]  + '">';
						xml += data[row][col] + '</ss:Data>\n';
						xml += '  </ss:Cell>\n';
					}

					xml += '</ss:Row>\n';
				}

				xml += emitXmlFooter();
				return xml;
			};

			console.log(jsonToSsXml(testJson));

			download = function(content, filename, contentType) {
				if (!contentType)
					contentType = 'application/octet-stream';
				var a = document.getElementById('xls_download');
				var blob = new Blob([ content ], {
					'type' : contentType
				});
				a.href = window.URL.createObjectURL(blob);
				a.download = filename;
			};

			var current_time = new Date();
			var file_name = 'tw_custom_entry_cargo_manifest_' + current_time.getFullYear() + (current_time.getMonth()+1)  + current_time.getDate() + current_time.getHours() + current_time.getMinutes() + current_time.getSeconds() +'.xls'
			download(jsonToSsXml(testJson), file_name,
					'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
		</script>

</div>
{% endblock %}
