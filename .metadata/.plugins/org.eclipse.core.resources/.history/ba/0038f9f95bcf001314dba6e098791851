{% extends "/exshipper/exshipper_base.html"%} {% block main_content %}

<script type="text/javascript">
	window.onload = function() {
		history.pushState(null, null, location.href);
		window.onpopstate = function(event) {
			history.go(1);
		};
	}
</script>

<div
	style="text-align: center; margin: 0px auto; position: fixed; width: 100%; background-color: #fff; z-index: 100;">
	<p style="font-size: 26px;">On-Hand Manifest</p>
	
	<hr>
</div>

<div
	style="position: absolute; top: 100px; width: 100%; text-align: center; margin: 10px auto;">
	<div>
		<br /> <a id="xls_download">Download On-Hand Manifest in XLS Format</a>
	</div>
	<br>
	<script type="text/javascript">
		var json_array = new Array();

		//put keys into array
		var obj_keys = new Object();
		obj_keys['tw_custom_entry_number'] = 'tw_custom_entry_tracking_number';

		obj_keys['length'] = 'length';
		obj_keys['width'] = 'width';
		obj_keys['height'] = 'height';
		
		obj_keys['size_accumulation_inch'] = 'size_accumulation_inch';
		obj_keys['size_accumulation_cm'] = 'size_accumulation_cm';
		
		
		obj_keys['weight_kg'] = 'weight_kg';
		obj_keys['weight_lb'] = 'weight_lb';

		json_array.push(obj_keys);
	</script>

	<!-- spearnet cargo manifest -->
	{% if onhand_manifest %} <br>
		{% for single_row_data in onhand_manifest %}
		
		<!--  -->
		<script type="text/javascript">
			var obj = new Object();
			obj_keys['tw_custom_entry_number'] = '{{ single_row_data.barcode_number }}';

			var length;
			if($.isNumeric('{{ single_row_data.size.length }}')){
				length = Number('{{ single_row_data.size.length }}');
			}
			var width;
			if($.isNumeric('{{ single_row_data.size.width }}')){
				width = Number('{{ single_row_data.size.width }}');
			}
			var height;
			if($.isNumeric('{{ single_row_data.size.height }}')){
				height = Number('{{ single_row_data.size.height }}');
			}
			var weight_kg;
			if($.isNumeric('{{ single_row_data.weight_kg }}')){
				weight_kg = Number('{{ single_row_data.weight_kg }}');
			}
			obj_keys['length'] = length;
			obj_keys['width'] = width;
			obj_keys['height'] = height;
			
			obj_keys['size_accumulation_inch'] = (length+width+height).toFixed(1);
			obj_keys['size_accumulation_cm'] = ((length+width+height)*2.54).toFixed(1);
			
			obj_keys['weight_kg'] = weight_kg;
			obj_keys['weight_lb'] = weight_kg*2.2046;
			
			json_array.push(obj);
		</script>
		{% endfor %}
		{% endif %}
		<!-- end spearnet cargo manifest -->


		<script type="text/javascript">
			//Test script to generate a file from JavaScript such
			//that MS Excel will honor non-ASCII characters.
			//var packages_info_log = "{{ spearnet_customer_package_info_log }}";
			var obj_types = new Object();
			obj_types.tw_custom_entry_number = "String";
			
			obj_types.length = "String";
			obj_types.width = "String";
			obj_types.height = "String";
			
			obj_types.size_accumulation_inch = "String";
			obj_types.size_accumulation_cm = "String";
			
			obj_types.weight_kg = "String";
			obj_types.weight_lb = "String";
			
			
			testJson = json_array;
			testTypes = obj_types;

			emitXmlHeader = function() {
				return '<?xml version="1.0"?>\n'
						+ '<ss:Workbook xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">\n'
						+ '<ss:Worksheet ss:Name="Sheet1">\n'
						+ '<ss:Table>\n\n';
			};

			emitXmlFooter = function() {
				return '\n</ss:Table>\n' + '</ss:Worksheet>\n'
						+ '</ss:Workbook>\n';
			};

			jsonToSsXml = function(jsonObject) {
				var row;
				var col;
				var xml;
				var data = typeof jsonObject != "object" ? JSON
						.parse(jsonObject) : jsonObject;

				xml = emitXmlHeader();

				for (row = 0; row < data.length; row++) {
					xml += '<ss:Row>\n';

					for (col in data[row]) {
						xml += '  <ss:Cell>\n';
						xml += '    <ss:Data ss:Type="' + testTypes[col]  + '">';
						xml += data[row][col] + '</ss:Data>\n';
						xml += '  </ss:Cell>\n';
					}

					xml += '</ss:Row>\n';
				}

				xml += emitXmlFooter();
				return xml;
			};

			console.log(jsonToSsXml(testJson));

			download = function(content, filename, contentType) {
				if (!contentType)
					contentType = 'application/octet-stream';
				var a = document.getElementById('xls_download');
				var blob = new Blob([ content ], {
					'type' : contentType
				});
				a.href = window.URL.createObjectURL(blob);
				a.download = filename;
			};

			var current_time = new Date();
			var file_name = 'onhand_manifest_' + current_time.getFullYear() + (current_time.getMonth()+1)  + current_time.getDate() + current_time.getHours() + current_time.getMinutes() + current_time.getSeconds() +'.xls'
			download(jsonToSsXml(testJson), file_name,
					'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
		</script>

</div>
{% endblock %}
