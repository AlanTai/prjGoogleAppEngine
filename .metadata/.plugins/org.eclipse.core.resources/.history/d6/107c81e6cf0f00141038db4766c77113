<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="author" content="Alan Tai (Li-Chou Tai)">
<title>Coding Puzzle</title>


<script type="text/javascript" src="/js/jquery-1.10.2.min.js"></script>
<script src="/js/exshipper/jszip.js"></script>
<script src="/js/exshipper/xlsx.js"></script>
<script src="/js/exshipper/shim.js"></script>

</head>
<body>
	<div>
		<p style="margin: 5px auto;">Math Questions Page</p>
		<section id="triangle_points" style="display: inline-block;">
			<div style="display: block;">
				<span>Point-X1: </span> <input id="point_x1" type="text"> <span>Point-Y1:
				</span> <input id="point_y1" type="text">
			</div>

			<div style="display: block;">
				<span>Point-X2: </span> <input id="point_x2" type="text"> <span>Point-Y2:
				</span> <input id="point_y2" type="text">
			</div>

			<div style="display: block;">
				<span>Point-X3: </span> <input id="point_x3" type="text"> <span>Point-Y3:
				</span> <input id="point_y3" type="text">
			</div>

		</section>
		<section style="display: inline-block;">
			<input id="btn_calculate" type="button" value="Calculate"
				onclick="is_origin_in_given_triangle()">
			<p id="result" style="display: inline-block;"></p>
		</section>
	</div>

	<script type="text/javascript">
		var triangle_points;
		var is_points_valid = false;
		function is_origin_in_given_triangle() {
			triangle_points = new Object();
			$('#triangle_points input').each(function() {
				var key = $(this).attr('id');
				var value = $(this).val();

				if (!isNaN(value)) {
					triangle_points[key] = value;
				}
			});

			if (Object.keys(triangle_points).length !== 6) {
				alert('invalid given points\' data!');
			}
			else{
				var given_point = {'x':0, 'y':0};
				validate_point_inside_triangle(triangle_points, given_point);
			}
		}

		function validate_point_inside_triangle(arg_triangle_points,
				arg_given_point) {
			var point_x1 = arg_triangle_points['point_x1'];
			var point_y1 = arg_triangle_points['point_y1'];
			var point_x2 = arg_triangle_points['point_x2'];
			var point_y2 = arg_triangle_points['point_y2'];
			var point_x3 = arg_triangle_points['point_x3'];
			var point_y3 = arg_triangle_points['point_y3'];

			var point_x = arg_given_point['x'];
			var point_y = arg_given_point['y'];

			if (validate_dot_product(point_x1, point_y1, point_x2, point_y2, x,y) <= 0
					&& validate_dot_product(point_x2, point_y2, point_x3, point_y3, x, y) <= 0
					&& validate_dot_product(point_x3, point_y3, point_x1, point_y1, x, y) <= 0) {
				return true;
			}
			else{
				return false;
			}
		}

		function validate_dot_product(x1, y1, x2, y2, x, y) {
			var param_1 = (x2 - x1) * (y - y1);
			var param_2 = (x - x1) * (y2 - y1);

			return param_1 - param_2;
		}
	</script>
</body>
</html>